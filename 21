import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { ChevronDown } from 'lucide-react';

const faqData = [
  {
    question: 'Jenis bisnis apa yang bisa mendapatkan manfaat dari layanan Anda?',
    answer: 'Setiap bisnis yang mengumpulkan data dapat memperoleh manfaat. Kami bekerja dengan e-commerce, keuangan, kesehatan, manufaktur, UMKM, dan startup untuk membuka nilai dalam data mereka, meningkatkan efisiensi, dan menciptakan aliran pendapatan baru.'
  },
  {
    question: 'Apakah layanan SaaS untuk UMKM ini cocok untuk bisnis saya yang baru mulai?',
    answer: 'Tentu saja! Paket "UMKM Starter" kami dirancang khusus untuk bisnis yang baru mulai atau berskala kecil. Ini memberikan akses ke alat-alat penting seperti AI copywriter dan chatbot dasar dengan harga terjangkau untuk membantu Anda tumbuh.'
  },
  {
    question: 'Berapa lama waktu yang dibutuhkan untuk membangun model Software Cerdas khusus?',
    answer: 'Waktu pengerjaan bervariasi tergantung pada kompleksitas. Model prediktif sederhana mungkin memakan waktu 4-6 minggu, sementara sistem deep learning yang kompleks bisa memakan waktu 3-6 bulan. Kami memberikan peta jalan proyek yang terperinci setelah konsultasi awal kami.'
  },
  {
    question: 'Teknologi apa yang Anda gunakan?',
    answer: 'Tumpukan teknologi utama kami meliputi Python (dengan pustaka seperti TensorFlow, PyTorch, Scikit-learn), database SQL dan NoSQL, dan platform cloud seperti AWS, GCP, dan Azure. Untuk front-end, kami menggunakan React dan untuk API, kami lebih suka FastAPI atau Flask.'
  },
  {
    question: 'Apakah Anda menyediakan dukungan dan pemeliharaan setelah deployment?',
    answer: 'Ya, paket Enterprise Cerdas kami mencakup pemeliharaan berkelanjutan, pemantauan model, dan pelatihan ulang untuk memastikan sistem Anda berkinerja optimal dari waktu ke waktu. Kami juga menawarkan paket pemeliharaan terpisah untuk paket lain.'
  }
];

const FaqItem: React.FC<{ item: typeof faqData[0]; isOpen: boolean; onClick: () => void }> = ({ item, isOpen, onClick }) => {
  return (
    <div className="border-b border-medium-gray">
      <button onClick={onClick} className="w-full flex justify-between items-center py-5 text-left">
        <span className="text-lg font-medium text-primary">{item.question}</span>
        <motion.div animate={{ rotate: isOpen ? 180 : 0 }} transition={{ duration: 0.3 }}>
          <ChevronDown className="h-6 w-6 text-dark-gray" />
        </motion.div>
      </button>
      <AnimatePresence>
        {isOpen && (
          <motion.div
            initial={{ opacity: 0, height: 0 }}
            animate={{ opacity: 1, height: 'auto' }}
            exit={{ opacity: 0, height: 0 }}
            transition={{ duration: 0.3, ease: 'easeInOut' }}
            className="overflow-hidden"
          >
            <p className="pb-5 text-dark-gray">{item.answer}</p>
          </motion.div>
        )}
      </AnimatePresence>
    </div>
  );
};


const Faq: React.FC = () => {
    const [openIndex, setOpenIndex] = useState<number | null>(0);

    const handleClick = (index: number) => {
        setOpenIndex(openIndex === index ? null : index);
    };
    
  return (
    <section id="faq" className="py-20 bg-light-gray">
      <div className="container mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-12">
          <h2 className="text-3xl md:text-4xl font-display font-bold text-primary">Pertanyaan yang Sering Diajukan</h2>
          <p className="mt-4 max-w-2xl mx-auto text-lg text-dark-gray">
            Punya pertanyaan? Kami punya jawabannya. Jika Anda tidak menemukan yang Anda cari, jangan ragu untuk menghubungi kami.
          </p>
        </div>
        <div className="max-w-3xl mx-auto">
          {faqData.map((item, index) => (
            <FaqItem 
              key={index}
              item={item}
              isOpen={openIndex === index}
              onClick={() => handleClick(index)}
            />
          ))}
        </div>
      </div>
    </section>
  );
};

export default Faq;
